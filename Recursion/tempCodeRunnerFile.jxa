(() => {
    'use strict';

    ObjC.import("AppKit");

    // Safari JS CODE ---------------------------------------
    const safariJS = () => {
        // main :: IO ()
        const main = () => {
            const
                partIndices = Array.from(
                    document.querySelectorAll(".content-liftup__name")
                ).map(x => x.textContent),
                partDescriptions = Array.from(
                    document.querySelectorAll(".content-liftup__summary")
                ).map(x => x.textContent)
            return unlines(
                zipWith(i => d => `${i}: ${d}`)(
                    partIndices
                )(partDescriptions)
            )
        };

        // FUNCTIONS --

        // MAIN -----------------------------------------
        return main()
    };

    // readFile :: FilePath -> IO String
    const readFile = fp => {
        const
            e = $(),
            ns = $.NSString.stringWithContentsOfFileEncodingError(
                $(fp).stringByStandardizingPath,
                $.NSUTF8StringEncoding,
                e
            );
        return ObjC.unwrap(
            ns.isNil() ? (
                e.localizedDescription
            ) : ns
        );
    };

    // evalOmniJSWithArgs :: Function ->
    // [FilePath] -> [...OptionalArgs] -> a
    const evalSafariJSWithArgs = (win, fps, f, ...args) =>
        Application("Safari").doJavaScript(
            `(() => {
                'use strict';
                ${fps.map(readFile).join('\n\n')}
                return (${f})(${args.map(JSON.stringify)})
            })();`, {
                in: win
            }
        );

    // setClipOfTextType :: String -> String -> IO String
    const setClipOfTextType = utiOrBundleID =>
        txt => {
            // uti example: "public.utf8-plain-text"
            const pb = $.NSPasteboard.generalPasteboard;

            return (
                pb.clearContents,
                pb.setStringForType(
                    $(txt),
                    utiOrBundleID
                ),
                txt
            );
        };

    // SafariJS Context Evaluation ------------------------------------------------
    const
        appSafari = Application('Safari'),
        wins = appSafari.windows;

    return 0 < wins.length ? setClipOfTextType("public.utf8-plain-text")(
        evalSafariJSWithArgs(
            wins.at(0).currentTab,
            [
                "~/prelude-jxa/jsPrelude.js",
                "~/JS Libraries/JS Web Browser.js",
                "~/JS Libraries/JS Basics.js",
                "~/JS Libraries/JS Trees.js"
            ],
            safariJS
        )
    ) : 'No windows open in Safari.'
})();